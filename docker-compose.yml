version: '3.8'

services:
  app:
    build: .
    container_name: 100y-saas-app
    restart: unless-stopped
    environment:
      - DB_PATH=/data/app.db
      - APP_SECRET=${APP_SECRET:-change-me-in-production}
      - SMTP_HOST=${SMTP_HOST:-localhost}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_FROM_ADDRESS=${SMTP_FROM_ADDRESS:-noreply@example.com}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME:-100y SaaS}
      - BASE_URL=${BASE_URL:-http://localhost}
    volumes:
      - app_data:/data
      - app_backups:/backups
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  caddy:
    image: caddy:2-alpine
    container_name: 100y-saas-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    volumes:
      - ./Caddyfile.docker:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app_network

volumes:
  app_data:
    driver: local
  app_backups:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  app_network:
    driver: bridge
